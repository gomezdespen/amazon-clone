[{"/Users/danielgomez/dev/Projects/react/amazon-clone/src/index.js":"1","/Users/danielgomez/dev/Projects/react/amazon-clone/src/App.js":"2","/Users/danielgomez/dev/Projects/react/amazon-clone/src/reportWebVitals.js":"3","/Users/danielgomez/dev/Projects/react/amazon-clone/src/Header.js":"4","/Users/danielgomez/dev/Projects/react/amazon-clone/src/Home.js":"5","/Users/danielgomez/dev/Projects/react/amazon-clone/src/Product.js":"6","/Users/danielgomez/dev/Projects/react/amazon-clone/src/Checkout.js":"7","/Users/danielgomez/dev/Projects/react/amazon-clone/src/Subtotal.js":"8","/Users/danielgomez/dev/Projects/react/amazon-clone/src/reducer.js":"9","/Users/danielgomez/dev/Projects/react/amazon-clone/src/StateProvider.js":"10","/Users/danielgomez/dev/Projects/react/amazon-clone/src/CheckoutProduct.js":"11","/Users/danielgomez/dev/Projects/react/amazon-clone/src/Login.js":"12","/Users/danielgomez/dev/Projects/react/amazon-clone/src/firebase.js":"13","/Users/danielgomez/dev/Projects/react/amazon-clone/src/Payment.js":"14","/Users/danielgomez/dev/Projects/react/amazon-clone/src/axios.js":"15","/Users/danielgomez/dev/Projects/react/amazon-clone/src/Orders.js":"16","/Users/danielgomez/dev/Projects/react/amazon-clone/src/Order.js":"17"},{"size":693,"mtime":1607717488143,"results":"18","hashOfConfig":"19"},{"size":1967,"mtime":1608091088531,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1607319440520,"results":"21","hashOfConfig":"19"},{"size":2028,"mtime":1607843436113,"results":"22","hashOfConfig":"19"},{"size":3126,"mtime":1607796990046,"results":"23","hashOfConfig":"19"},{"size":1300,"mtime":1607722761782,"results":"24","hashOfConfig":"19"},{"size":1252,"mtime":1607843360065,"results":"25","hashOfConfig":"19"},{"size":1078,"mtime":1607970913563,"results":"26","hashOfConfig":"19"},{"size":1478,"mtime":1608061408729,"results":"27","hashOfConfig":"19"},{"size":372,"mtime":1607715938500,"results":"28","hashOfConfig":"19"},{"size":1251,"mtime":1608069031938,"results":"29","hashOfConfig":"19"},{"size":2306,"mtime":1607840491866,"results":"30","hashOfConfig":"19"},{"size":531,"mtime":1607839661615,"results":"31","hashOfConfig":"19"},{"size":5299,"mtime":1608098685987,"results":"32","hashOfConfig":"19"},{"size":220,"mtime":1608068299040,"results":"33","hashOfConfig":"19"},{"size":1088,"mtime":1608099237321,"results":"34","hashOfConfig":"19"},{"size":787,"mtime":1608125073092,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"1s9whim",{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"38"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"38"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"38"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"38"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/danielgomez/dev/Projects/react/amazon-clone/src/index.js",[],["77","78"],"/Users/danielgomez/dev/Projects/react/amazon-clone/src/App.js",["79"],"import React, { useEffect } from 'react';\nimport './App.css';\nimport Header from './Header';\nimport Home from './Home';\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport Checkout from './Checkout';\nimport Login from './Login';\nimport Payment from './Payment';\nimport Orders from './Orders';\nimport { auth } from \"./firebase\";\nimport { useStateValue } from './StateProvider';\nimport { loadStripe} from \"@stripe/stripe-js\";\nimport { Elements } from \"@stripe/react-stripe-js\";\n\n\nconst promise = loadStripe (\"pk_test_51HyKrbBIkpIu7Pdntk1TDWQAcEv5cLEUS3Imv82uz7PLfl2912oQxxGzEMWmwNBepktTb5TSdJua0Vsb9KfPu9VD00wkMmA9iG\");\n\n\nfunction App() {\n  const [{}, dispatch] = useStateValue();\n\n  useEffect(() => {\n    // will only run once when the app components loads...\n    auth.onAuthStateChanged((authUser) => {\n      console.log(\"THE USER IS >>>\", authUser);\n\n      if (authUser) {\n        // the user just logged in / the user was logged in\n\n        dispatch({\n          type: 'SET_USER',\n          user: authUser\n        })\n      } else {\n        // the user is logged out\n        dispatch({\n          type: 'SET_USER',\n          user: null\n        })\n      }\n    })\n  }, [dispatch]);  \n\n  return (\n\n    <Router >\n\n      <div className = \"app\">\n        <Switch>\n\n        <Route path = \"/orders\" >\n            <Header / >\n            <Orders />\n\n        </Route>\n\n          <Route path = \"/login\" >\n\n            <Login />\n\n          </Route>\n\n\n          <Route path = \"/checkout\">\n\n            <Header / >\n            <Checkout / >\n\n          </Route>\n\n          <Route path = \"/payment\">\n            <Header / >\n              <Elements stripe={promise}>\n              <Payment />\n              </Elements>\n            \n\n          </Route>\n          \n          <Route path = \"/\" >\n          \n            <Header / >\n            <Home / >\n          \n          </Route>\n\n        </Switch> \n      </div> \n    </Router> \n  );\n}\n\nexport default App;","/Users/danielgomez/dev/Projects/react/amazon-clone/src/reportWebVitals.js",[],"/Users/danielgomez/dev/Projects/react/amazon-clone/src/Header.js",[],"/Users/danielgomez/dev/Projects/react/amazon-clone/src/Home.js",[],"/Users/danielgomez/dev/Projects/react/amazon-clone/src/Product.js",[],"/Users/danielgomez/dev/Projects/react/amazon-clone/src/Checkout.js",["80"],"import React from 'react';\nimport \"./Checkout.css\";\nimport CheckoutProduct from './CheckoutProduct';\nimport { useStateValue } from './StateProvider';\nimport Subtotal from \"./Subtotal\";\n\n\n\nfunction Checkout() { \n    const [{basket, user }, dispatch ] = useStateValue();\n\n    return ( \n        <div className=\"checkout\">\n\n            <div className=\"checkout_left\">\n               \n               <img className=\"checkout_ad\" src=\"https://images-na.ssl-images-amazon.com/images/G/02/UK_CCMP/TM/OCC_Amazon1._CB423492668_.jpg\" alt=\"#\"/>\n                \n                <div>\n                    <h3>Hello , {user?.email}</h3>\n                    <h2 className=\"checkout_title\"> Your Shopping Basket </h2>\n\n                 {basket.map (item => (\n                    <CheckoutProduct \n                        id={item.id}\n                        title={item.title}\n                        image={item.image}\n                        price={item.price}\n                        rating={item.rating}\n                        />\n                    ))} \n                   \n\n                </div>\n            </div>\n\n            <div className=\"checkout_right\">\n\n                <Subtotal />\n\n            </div>\n        </div>\n    )\n}\n\nexport default Checkout;\n","/Users/danielgomez/dev/Projects/react/amazon-clone/src/Subtotal.js",["81"],"import React from 'react';\nimport \"./Subtotal.css\";\nimport CurrencyFormat from \"react-currency-format\";\nimport { useStateValue } from './StateProvider';\nimport { getBasketTotal } from './reducer';\nimport { useHistory } from \"react-router-dom\";\n\n\nfunction Subtotal() {\n\n    const history = useHistory();\n    const [{ basket }, dispatch] = useStateValue();\n\n    return ( \n      <div className=\"subtotal\">\n\n        <CurrencyFormat\n          renderText={(value) => (\n            <>\n              <p>\n                Subtotal ({basket?.length} items): <strong>{value}</strong>\n              </p>\n \n              <small className=\"subtotal_gift\">\n                <input type=\"checkbox\"/> This order contains a gift\n              </small>\n\n            </>\n          )}\n          decimalScale={2}\n          value={getBasketTotal(basket)} \n          displayType={\"text\"}\n          thousandSeparator={true}\n          prefix={\"$\"}\n        />\n  \n        <button onClick={e => history.push('/payment')}>Proceed to Checkout</button>\n        \n      </div>\n    )\n}\n\nexport default Subtotal;\n\n\n\n","/Users/danielgomez/dev/Projects/react/amazon-clone/src/reducer.js",[],"/Users/danielgomez/dev/Projects/react/amazon-clone/src/StateProvider.js",[],"/Users/danielgomez/dev/Projects/react/amazon-clone/src/CheckoutProduct.js",["82"],"import React from 'react'\nimport './CheckoutProduct.css';\nimport { useStateValue } from './StateProvider';\n\n\nfunction CheckoutProduct({id, image, title, price, rating }) {\n    const [{basket}, dispatch ] = useStateValue();\n\n\n    const removeFromBasket = () => {\n        dispatch ({\n            type: 'REMOVE_FROM_BASKET',\n            id: id,\n    })\n    }\n\n    return (\n            <div className=\"checkoutProduct\">\n                <img className=\"checkoutProduct_image\" src={image} alt=\"#\"/>\n                <div className=\"checkoutProduct_info\">\n                    <p className=\"checkoutProduct_title\">{title}</p>\n                    <p className=\"checkoutProduct_price\"> \n                        <small>$</small>\n                        <strong>{price}</strong>\n                    </p>\n                    <div className='checkoutProduct_rating'>\n\n                        {Array (rating)\n                        .fill()\n                        .map((_, i) =>(\n                            <p>⭐</p>\n\n                        ))}\n                    </div>\n                    \n                        <button onClick={removeFromBasket}>Remove from Basket</button>\n                </div> \n            </div>\n    )\n}\n\nexport default CheckoutProduct;\n","/Users/danielgomez/dev/Projects/react/amazon-clone/src/Login.js",[],"/Users/danielgomez/dev/Projects/react/amazon-clone/src/firebase.js",[],"/Users/danielgomez/dev/Projects/react/amazon-clone/src/Payment.js",["83"],"import React, { useState, useEffect } from 'react';\nimport './Payment.css';\nimport { useStateValue } from './StateProvider';\nimport CheckoutProduct from './CheckoutProduct';\nimport {Link, useHistory} from 'react-router-dom';\nimport { CardElement, useStripe, useElements, } from '@stripe/react-stripe-js';\nimport CurrencyFormat from 'react-currency-format';\nimport { getBasketTotal } from \"./reducer\";\nimport axios from './axios';\nimport { db } from './firebase';\n\n\n\nfunction Payment() {\n    const [{ basket, user }, dispatch] = useStateValue();\n    const history = useHistory();\n\n\n    const stripe = useStripe();\n    const elements = useElements();\n\n    const [succeeded, setSucceeded] = useState(false);\n    const [processing, setProcessing] = useState(\"\");\n    const [error, setError] = useState(null);\n    const [disabled, setDisabled] = useState(true);\n    const [clientSecret, setClientSecret] = useState(true);\n\n    useEffect(() => { \n        // \n        const getClientSecret = async () => {\n            const response = await axios({\n                method: 'post',\n                url: `/payments/create?total=${getBasketTotal(basket) * 100}` \n            });\n            setClientSecret(response.data.clientSecret)\n\n        }\n            getClientSecret();\n\t\t}, [basket])\n\t\t\n\t\tconsole.log('The Secret Is >>>', clientSecret)\n\n\n    const handleSubmit = async (event) => {\n\n        // fanct stripe magic\n        event.preventDefault();\n        setProcessing(true);\n        \n       \n        const payload = await stripe.confirmCardPayment(clientSecret, {\n            payment_method: {\n                card: elements.getElement(CardElement)\n            }\n        }).then(({ paymentIntent }) => {\n                // paymentIntent = payment confirmation\n\n                db\n                    .collection('users')\n                    .doc('user?.uid')\n                    .collection('orders')\n                    .doc('paymentIntent.id')\n                    .set({\n                        basket: basket,\n                        amount: paymentIntent.amount,\n                        created: paymentIntent.created\n                    })\n\n                setSucceeded(true)\n                setError(null)\n\t\t\t\tsetProcessing(false)\n\t\t\t\t\t\t\t\t\n\t\t\t    history.replace('/orders');\n\n\t\t\t\tdispatch({\n\t\t\t\t    type: 'EMPTY_BASKET',\n\t\t\t\t})     \n      });\n\n    }\n\n\n    const handleChange = event => {\n        //listen for changes in the cardElement\n        // and display any errors as the customer types their card details\n        setDisabled(event.empty);\n        setError(event.error?event.error.message : \"\");\n    }\n\n    return ( \n      <div className = \"payment\" >\n        <div className = \"payment_container\">\n\n          <h1>\n            Checkout (<Link to = \"/checkout\"> { basket?.length} items </Link>)\n          </h1>\n\n            {/* Payment seciton--delivery address */ }\n\n            <div className = \"payment_section\" >\n              <div className = \"payment_title\" >\n                <h3> Delivery Address </h3> \n              </div>\n\n                <div className = \"payment_address\">\n                    <p> {user?.email} </p> \n                    <p> 123 React lane </p> \n                    <p> Lodi, New Jersey </p> \n                </div>\n\n            </div> \n            {/* Payment seciton--review items */ }\n\n            <div className = \"payment_section\" >\n\n            <div className = \"payment_title\" >\n                <h3> Review Items and delivery </h3> \n            </div> \n\n            <div className = \"payment_items\"> \n\n                {basket.map(item => ( \n                    <CheckoutProduct \n                        id ={item.id}\n                        title = {item.title}\n                        image = {item.image}\n                        price = {item.price}\n                        rating = {item.rating}\n                    />\n                 ))\n                } \n            </div> \n        </div>\n\n            {/* Payment seciton--payment method */ }\n\n        <div className = \"payment_section\" >\n            <div className = \"payment_title\">\n                <h3> Payment method </h3> \n            </div> \n\n        <div className = \"payment_details\" > \n        {/* stripe magic */ } \n            <form onSubmit = { handleSubmit } >\n                <CardElement onChange = {handleChange}/>\n                    <div className=\"payment_priceContainer\">\n                        <CurrencyFormat\n                            renderText={(value) => (\n                                <h3>order total : {value}</h3>  \n                            )}   \n                            decimalScale={2}\n                            value={getBasketTotal(basket)} \n                            displayType={\"text\"}\n                            thousandSeparator={true}\n                            prefix={\"$\"}\n                        />\n                        <button disabled={ processing || disabled || succeeded }>\n                                <span>{processing? <p>Processing</p> :\"Buy Now\"}</span>\n                        </button>\n                    </div> \n\n                    {/* errors */}\n                    {error & <div>{error}</div>}\n                </form> \n            </div> \n        </div>\n\n      </div> \n    </div>\n    );\n  }    \n\nexport default Payment;","/Users/danielgomez/dev/Projects/react/amazon-clone/src/axios.js",[],"/Users/danielgomez/dev/Projects/react/amazon-clone/src/Orders.js",["84","85"],"import React, { useState, useEffect } from 'react';\nimport './Orders.css'; \nimport { db } from './firebase';\nimport { useStateValue } from './StateProvider';\nimport Order from './Order';\n\nfunction Orders() {\n    const [{basket, user}, dispatch] = useStateValue();\n    const[orders, setOrders] = useState([]);\n\n    useEffect(() => {\n        if(user){\n            db\n                .collection('users')\n                .doc(user?.uid)\n                .collection('orders')\n                .ordersBy('created', 'desc')\n                .onSnapshot(snapshot => (\n                    setOrders(snapshot.docs.map(doc => ({\n                        id: doc.id,\n                        data: doc.data()\n                    })))\n        ))\n    } else {\n        setOrders([])\n    }\n        \n    }, [user])\n\n    return (\n        <div className=\"orders\">\n            <h1>Your Orders</h1>\n\n            <div className=\"orders_order\">\n                {orders?.map(order => (\n                    <Order order={order}/>\n                ))}\n            </div>\n        </div>\n    )\n}\n\nexport default Orders;\n","/Users/danielgomez/dev/Projects/react/amazon-clone/src/Order.js",[],{"ruleId":"86","replacedBy":"87"},{"ruleId":"88","replacedBy":"89"},{"ruleId":"90","severity":1,"message":"91","line":21,"column":10,"nodeType":"92","messageId":"93","endLine":21,"endColumn":12},{"ruleId":"94","severity":1,"message":"95","line":10,"column":29,"nodeType":"96","messageId":"97","endLine":10,"endColumn":37},{"ruleId":"94","severity":1,"message":"95","line":12,"column":24,"nodeType":"96","messageId":"97","endLine":12,"endColumn":32},{"ruleId":"94","severity":1,"message":"98","line":7,"column":13,"nodeType":"96","messageId":"97","endLine":7,"endColumn":19},{"ruleId":"94","severity":1,"message":"99","line":51,"column":15,"nodeType":"96","messageId":"97","endLine":51,"endColumn":22},{"ruleId":"94","severity":1,"message":"98","line":8,"column":13,"nodeType":"96","messageId":"97","endLine":8,"endColumn":19},{"ruleId":"94","severity":1,"message":"95","line":8,"column":28,"nodeType":"96","messageId":"97","endLine":8,"endColumn":36},"no-native-reassign",["100"],"no-negated-in-lhs",["101"],"no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'basket' is assigned a value but never used.","'payload' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]